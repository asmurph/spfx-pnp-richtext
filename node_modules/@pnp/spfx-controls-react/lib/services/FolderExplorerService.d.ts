import { ServiceKey, ServiceScope } from "@microsoft/sp-core-library";
import { IFolderExplorerService } from "./IFolderExplorerService";
import { IFolder } from "./IFolderExplorerService";
export declare class FolderExplorerService implements IFolderExplorerService {
    static readonly serviceKey: ServiceKey<IFolderExplorerService>;
    constructor(serviceScope: ServiceScope);
    /**
     * Get root folder from library
     * @param listId - the ID of the library to query
     */
    GetRootFolder: (listId: string) => Promise<IFolder>;
    /**
     * Get root folder from library
     * @param listId - the ID of the library to query
     */
    private _getRootFolder;
    /**
   * Get folders within a given library or sub folder
   * @param webAbsoluteUrl - the url of the target site
   * @param folderRelativeUrl - the relative url of the folder
   */
    GetFolders: (webAbsoluteUrl: string, folderRelativeUrl: string) => Promise<IFolder[]>;
    /**
     * Get folders within a given library or sub folder
     * @param webAbsoluteUrl - the url of the target site
     * @param folderRelativeUrl - the relative url of the folder
     */
    private _getFolders;
    /**
     * Create a new folder
     * @param webAbsoluteUrl - the url of the target site
     * @param folderRelativeUrl - the relative url of the base folder
     * @param name - the name of the folder to be created
     */
    AddFolder: (webAbsoluteUrl: string, folderRelativeUrl: string, name: string) => Promise<IFolder>;
    /**
   * Create a new folder
   * @param webAbsoluteUrl - the url of the target site
   * @param folderRelativeUrl - the relative url of the base folder
   * @param name - the name of the folder to be created
   */
    private _addFolder;
}
