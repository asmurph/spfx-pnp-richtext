{"version":3,"sources":["services/FolderExplorerService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8DAAsE;AACtE,8DAAyD;AAGzD,8BAAmD;AAEnD;IAIE,+BAAY,YAA0B;QAAtC,iBAWC;QAED;;;WAGG;QACI,kBAAa,GAAG,UAAO,MAAc;;gBAC1C,sBAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAC;;aACpC,CAAA;QAED;;;WAGG;QACK,mBAAc,GAAG,UAAO,MAAc;;;;;wBACxC,UAAU,GAAY,IAAI,CAAC;;;;wBAEhB,qBAAM,OAAE,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,EAAA;;wBAAnH,UAAU,GAAG,SAAsG,CAAC;;;;wBAEpH,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,OAAK,CAAC,CAAC;;4BAEhD,sBAAO,UAAU,EAAC;;;aACnB,CAAA;QAED;;;;SAIC;QACM,eAAU,GAAG,UAAO,cAAsB,EAAE,iBAAyB;;gBAC1E,sBAAO,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,iBAAiB,CAAC,EAAC;;aAC5D,CAAA;QAED;;;;WAIG;QACK,gBAAW,GAAG,UAAO,cAAsB,EAAE,iBAAyB;;;;;wBACxE,OAAO,GAAc,EAAE,CAAC;;;;wBAEpB,GAAG,GAAG,IAAI,QAAG,CAAC,cAAc,CAAC,CAAC;wBACL,qBAAM,GAAG,CAAC,4BAA4B,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAA;;wBAAtJ,aAAa,GAAc,SAA2H;wBAC1J,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,IAAI,OAAO,EAAjB,CAAiB,CAAC,CAAC;;;;wBAEvD,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,OAAK,CAAC,CAAC;;4BAEhD,sBAAO,OAAO,EAAC;;;aAChB,CAAA;QAED;;;;;WAKG;QACI,cAAS,GAAG,UAAO,cAAsB,EAAE,iBAAyB,EAAE,IAAY;;gBACvF,sBAAO,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,iBAAiB,EAAE,IAAI,CAAC,EAAC;;aACjE,CAAA;QAED;;;;;SAKC;QACO,eAAU,GAAG,UAAO,cAAsB,EAAE,iBAAyB,EAAE,IAAY;;;;;wBACrF,MAAM,GAAY,IAAI,CAAC;;;;wBAEnB,GAAG,GAAG,IAAI,QAAG,CAAC,cAAc,CAAC,CAAC;wBACG,qBAAM,GAAG,CAAC,4BAA4B,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAA;;wBAA9G,eAAe,GAAoB,SAA2E;wBAClH,EAAE,CAAC,CAAC,eAAe,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC5C,MAAM,GAAG;gCACP,IAAI,EAAE,eAAe,CAAC,IAAI,CAAC,IAAI;gCAC/B,iBAAiB,EAAE,eAAe,CAAC,IAAI,CAAC,iBAAiB;6BAC1D,CAAC;wBACJ,CAAC;;;;wBAED,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,OAAK,CAAC,CAAC;;4BAE9C,sBAAO,MAAM,EAAC;;;aACf,CAAA;QA1FC,YAAY,CAAC,YAAY,CAAC;YAExB,IAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,6BAAW,CAAC,UAAU,CAAC,CAAC;YACjE,OAAE,CAAC,KAAK,CAAC;gBACP,EAAE,EAAE;oBACF,OAAO,EAAE,WAAW,CAAC,GAAG,CAAC,WAAW;iBACrC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAbsB,gCAAU,GAAuC,4BAAU,CAAC,MAAM,CAAyB,gBAAgB,EAAE,qBAAqB,CAAC,CAAC;IAgG7J,4BAAC;CAlGD,AAkGC,IAAA;AAlGY,sDAAqB","file":"services/FolderExplorerService.js","sourcesContent":["import { ServiceKey, ServiceScope } from \"@microsoft/sp-core-library\";\nimport { PageContext } from \"@microsoft/sp-page-context\";\nimport { IFolderExplorerService } from \"./IFolderExplorerService\";\nimport { IFolder } from \"./IFolderExplorerService\";\nimport { sp, Web, FolderAddResult } from \"@pnp/sp\";\n\nexport class FolderExplorerService implements IFolderExplorerService {\n\n  public static readonly serviceKey: ServiceKey<IFolderExplorerService> = ServiceKey.create<IFolderExplorerService>('SPFx:SPService', FolderExplorerService);\n\n  constructor(serviceScope: ServiceScope) {\n\n    serviceScope.whenFinished(() => {\n\n      const pageContext = serviceScope.consume(PageContext.serviceKey);\n      sp.setup({\n        sp: {\n          baseUrl: pageContext.web.absoluteUrl\n        }\n      });\n    });\n  }\n\n  /**\n   * Get root folder from library\n   * @param listId - the ID of the library to query\n   */\n  public GetRootFolder = async (listId: string): Promise<IFolder> => {\n    return this._getRootFolder(listId);\n  }\n\n  /**\n   * Get root folder from library\n   * @param listId - the ID of the library to query\n   */\n  private _getRootFolder = async (listId: string): Promise<IFolder> => {\n    let rootFolder: IFolder = null;\n    try {\n      rootFolder = await sp.web.lists.getById(listId).rootFolder.select('Name', 'ServerRelativeUrl').usingCaching().get();\n    } catch (error) {\n      console.error('Error loading folders', error);\n    }\n    return rootFolder;\n  }\n\n  /**\n * Get folders within a given library or sub folder\n * @param webAbsoluteUrl - the url of the target site\n * @param folderRelativeUrl - the relative url of the folder\n */\n  public GetFolders = async (webAbsoluteUrl: string, folderRelativeUrl: string): Promise<IFolder[]> => {\n    return this._getFolders(webAbsoluteUrl, folderRelativeUrl);\n  }\n\n  /**\n   * Get folders within a given library or sub folder\n   * @param webAbsoluteUrl - the url of the target site\n   * @param folderRelativeUrl - the relative url of the folder\n   */\n  private _getFolders = async (webAbsoluteUrl: string, folderRelativeUrl: string): Promise<IFolder[]> => {\n    let results: IFolder[] = [];\n    try {\n      const web = new Web(webAbsoluteUrl);\n      let foldersResult: IFolder[] = await web.getFolderByServerRelativeUrl(folderRelativeUrl).folders.select('Name', 'ServerRelativeUrl').orderBy('Name').get();\n      results = foldersResult.filter(f => f.Name != \"Forms\");\n    } catch (error) {\n      console.error('Error loading folders', error);\n    }\n    return results;\n  }\n\n  /**\n   * Create a new folder\n   * @param webAbsoluteUrl - the url of the target site\n   * @param folderRelativeUrl - the relative url of the base folder\n   * @param name - the name of the folder to be created\n   */\n  public AddFolder = async (webAbsoluteUrl: string, folderRelativeUrl: string, name: string): Promise<IFolder> => {\n    return this._addFolder(webAbsoluteUrl, folderRelativeUrl, name);\n  }\n\n  /**\n * Create a new folder\n * @param webAbsoluteUrl - the url of the target site\n * @param folderRelativeUrl - the relative url of the base folder\n * @param name - the name of the folder to be created\n */\n  private _addFolder = async (webAbsoluteUrl: string, folderRelativeUrl: string, name: string): Promise<IFolder> => {\n    let folder: IFolder = null;\n    try {\n      const web = new Web(webAbsoluteUrl);\n      let folderAddResult: FolderAddResult = await web.getFolderByServerRelativeUrl(folderRelativeUrl).folders.add(name);\n      if (folderAddResult && folderAddResult.data) {\n        folder = {\n          Name: folderAddResult.data.Name,\n          ServerRelativeUrl: folderAddResult.data.ServerRelativeUrl\n        };\n      }\n    } catch (error) {\n      console.error('Error adding folder', error);\n    }\n    return folder;\n  }\n\n}\n"],"sourceRoot":"../../src"}